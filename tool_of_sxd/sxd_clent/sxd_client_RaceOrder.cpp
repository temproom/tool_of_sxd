#include "stdafx.h"
#include <thread>
#include <boost/format.hpp>
#include "common.h"
#include "sxd_client.h"

class RaceOrderType
{
public:
	static const int SUCCESS = 0;
	static const int FAILED = 3;
	static const int FULL_LEVEL = 5;
};

void sxd_client::RaceOrder()
{
	vector<int> race = { 1,3,11,19,21 };
	
	for (int race_id : race)
	{
		this->get_award(race_id);
	}
}

int sxd_client::get_award(int race_id)
{
	//Json::Value datak = this->Mod_RaceOrder_Base_main_panel();

	Json::Value data = this->Mod_RaceOrder_Base_get_award(race_id);

	int result = data[0].asInt();
	if (result != RaceOrderType::SUCCESS)
	{
		common::log(boost::str(boost::format("【赛事战令】：获取赛事战令信息失败！！代码：%1%\n") % result));
		return 0;
	}
	else
	{
		common::log(boost::str(boost::format("【赛事战令】：领取赛事战令【%1%】成功！！\n") % race_id));
	}
	return 1;
}

//============================================================================
//  获取赛事战令信息
// {module:715, action:1,
// request:[Utils.IntUtil],
// Example	
//     [  ]
// 
// "response":[[Utils.IntUtil,Utils.ByteUtil,Utils.IntUtil,Utils.IntUtil,[Utils.ByteUtil,[Utils.IntUtil,Utils.IntUtil,Utils.ByteUtil],Utils.ByteUtil,[Utils.IntUtil,Utils.IntUtil,Utils.ByteUtil],Utils.ByteUtil],Utils.ByteUtil,Utils.IntUtil,Utils.IntUtil,Utils.IntUtil]]
// Example
// 
// RaceOrderData.as L43
//		oObject.list(param1[0][_loc8_],_loc5_,["race_id","level","exp","next_exp","award_list","high_award_is_lock","unlock_need_charge","charge_ingot","buy_exp_need_ingot"]);
//               oObject.list(_loc2_[_loc9_],_loc6_,["level","award_item_list","is_get","high_award_item_list","high_is_get"]);
// [ [ [ 19, 12, 0, 50, [ [ 1, [ [ 4611, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 2, [ [ 7262, 1, 0 ] ], 1, [ [ 9766, 1, 0 ] ], 0 ], [ 3, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 4, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 5, [ [ 8363, 1, 0 ] ], 1, [ [ 4982, 3, 0 ] ], 0 ], [ 6, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 7, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 8, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 9, [ [ 7262, 1, 0 ] ], 1, [ [ 5104, 3, 0 ] ], 0 ], [ 10, [ [ 6499, 2, 1 ] ], 1, [ [ 9761, 4, 1 ], [ 8364, 1, 1 ] ], 0 ], [ 11, [ [ 2016, 5, 0 ] ], 1, [ [ 7264, 1, 0 ] ], 0 ], [ 12, [ [ 7262, 1, 0 ] ], 0, [ [ 9766, 1, 0 ] ], 0 ], [ 13, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 14, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 15, [ [ 8363, 1, 0 ] ], 0, [ [ 4982, 3, 0 ] ], 0 ], [ 16, [ [ 7262, 1, 0 ] ], 0, [ [ 7925, 10, 0 ] ], 0 ], [ 17, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 18, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 19, [ [ 7262, 1, 0 ] ], 0, [ [ 5104, 3, 0 ] ], 0 ], [ 20, [ [ 8161, 50, 1 ] ], 0, [ [ 9761, 4, 1 ], [ 9213, 3, 1 ] ], 0 ], [ 21, [ [ 2016, 5, 0 ] ], 0, [ [ 6758, 1, 0 ] ], 0 ], [ 22, [ [ 7262, 1, 0 ] ], 0, [ [ 9766, 1, 0 ] ], 0 ], [ 23, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 24, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 25, [ [ 8363, 1, 0 ] ], 0, [ [ 4982, 3, 0 ] ], 0 ], [ 26, [ [ 7262, 1, 0 ] ], 0, [ [ 7925, 10, 0 ] ], 0 ], [ 27, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 28, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 29, [ [ 7262, 1, 0 ] ], 0, [ [ 5104, 3, 0 ] ], 0 ], [ 30, [ [ 8358, 10, 1 ] ], 0, [ [ 9761, 4, 1 ], [ 9804, 1, 1 ] ], 0 ] ], 0, 680, 0, 50 ], [ 3, 30, 0, 0, [ [ 1, [ [ 4611, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 2, [ [ 347, 300, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 3, [ [ 2263, 60, 0 ] ], 1, [ [ 8362, 60, 0 ] ], 0 ], [ 4, [ [ 1740, 50, 0 ] ], 1, [ [ 7926, 50, 0 ] ], 0 ], [ 5, [ [ 4239, 1, 0 ] ], 1, [ [ 4612, 1, 0 ] ], 0 ], [ 6, [ [ 2471, 30, 0 ] ], 1, [ [ 7925, 18, 0 ] ], 0 ], [ 7, [ [ 6909, 3, 0 ] ], 1, [ [ 9131, 1, 0 ] ], 0 ], [ 8, [ [ 2343, 60, 0 ] ], 1, [ [ 2397, 50, 0 ] ], 0 ], [ 9, [ [ 5323, 3, 0 ] ], 1, [ [ 5117, 50, 0 ] ], 0 ], [ 10, [ [ 4431, 1, 1 ] ], 1, [ [ 9083, 1, 1 ], [ 9093, 10, 1 ] ], 0 ], [ 11, [ [ 4611, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 12, [ [ 347, 300, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 13, [ [ 2263, 60, 0 ] ], 1, [ [ 8362, 60, 0 ] ], 0 ], [ 14, [ [ 1740, 50, 0 ] ], 1, [ [ 7926, 50, 0 ] ], 0 ], [ 15, [ [ 4239, 1, 0 ] ], 1, [ [ 4612, 1, 0 ] ], 0 ], [ 16, [ [ 2471, 30, 0 ] ], 1, [ [ 7925, 18, 0 ] ], 0 ], [ 17, [ [ 6909, 3, 0 ] ], 1, [ [ 9131, 1, 0 ] ], 0 ], [ 18, [ [ 2343, 60, 0 ] ], 1, [ [ 2397, 50, 0 ] ], 0 ], [ 19, [ [ 5323, 3, 0 ] ], 1, [ [ 5117, 50, 0 ] ], 0 ], [ 20, [ [ 2625, 2, 1 ] ], 1, [ [ 9093, 10, 1 ], [ 9083, 1, 1 ] ], 0 ], [ 21, [ [ 4611, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 22, [ [ 347, 300, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 23, [ [ 2263, 60, 0 ] ], 1, [ [ 8362, 60, 0 ] ], 0 ], [ 24, [ [ 1740, 50, 0 ] ], 1, [ [ 7926, 50, 0 ] ], 0 ], [ 25, [ [ 4239, 1, 0 ] ], 1, [ [ 4612, 1, 0 ] ], 0 ], [ 26, [ [ 2471, 30, 0 ] ], 1, [ [ 7925, 18, 0 ] ], 0 ], [ 27, [ [ 6909, 3, 0 ] ], 1, [ [ 9131, 1, 0 ] ], 0 ], [ 28, [ [ 2343, 60, 0 ] ], 1, [ [ 2397, 50, 0 ] ], 0 ], [ 29, [ [ 5323, 3, 0 ] ], 1, [ [ 5117, 50, 0 ] ], 0 ], [ 30, [ [ 8358, 10, 1 ] ], 1, [ [ 9093, 10, 1 ], [ 9083, 1, 1 ] ], 0 ] ], 0, 1280, 0, 0 ], [ 1, 22, 40, 50, [ [ 1, [ [ 4611, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 2, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 3, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 4, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 5, [ [ 8363, 1, 0 ] ], 1, [ [ 4982, 3, 0 ] ], 0 ], [ 6, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 7, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 8, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 9, [ [ 7262, 1, 0 ] ], 1, [ [ 5104, 3, 0 ] ], 0 ], [ 10, [ [ 8161, 40, 1 ] ], 1, [ [ 8364, 1, 1 ], [ 7264, 1, 1 ] ], 0 ], [ 11, [ [ 2016, 5, 0 ] ], 1, [ [ 7264, 1, 0 ] ], 0 ], [ 12, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 13, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 14, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 15, [ [ 8363, 1, 0 ] ], 1, [ [ 4982, 3, 0 ] ], 0 ], [ 16, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 17, [ [ 7262, 1, 0 ] ], 1, [ [ 9093, 1, 0 ] ], 0 ], [ 18, [ [ 7262, 1, 0 ] ], 1, [ [ 8358, 1, 0 ] ], 0 ], [ 19, [ [ 7262, 1, 0 ] ], 1, [ [ 5104, 3, 0 ] ], 0 ], [ 20, [ [ 9761, 2, 1 ] ], 1, [ [ 9213, 3, 1 ], [ 7264, 1, 1 ] ], 0 ], [ 21, [ [ 2016, 5, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 22, [ [ 7262, 1, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 23, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 24, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 25, [ [ 8363, 1, 0 ] ], 0, [ [ 4982, 3, 0 ] ], 0 ], [ 26, [ [ 7262, 1, 0 ] ], 0, [ [ 7925, 10, 0 ] ], 0 ], [ 27, [ [ 7262, 1, 0 ] ], 0, [ [ 9093, 1, 0 ] ], 0 ], [ 28, [ [ 7262, 1, 0 ] ], 0, [ [ 8358, 1, 0 ] ], 0 ], [ 29, [ [ 7262, 1, 0 ] ], 0, [ [ 5104, 3, 0 ] ], 0 ], [ 30, [ [ 8358, 10, 1 ] ], 0, [ [ 7264, 1, 1 ], [ 9804, 1, 1 ] ], 0 ] ], 0, 680, 0, 10 ], [ 11, 23, 10, 50, [ [ 1, [ [ 6499, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 2, [ [ 347, 100, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 3, [ [ 2263, 20, 0 ] ], 1, [ [ 8362, 30, 0 ] ], 0 ], [ 4, [ [ 1740, 15, 0 ] ], 1, [ [ 7926, 20, 0 ] ], 0 ], [ 5, [ [ 4239, 1, 0 ] ], 1, [ [ 4982, 3, 0 ] ], 0 ], [ 6, [ [ 2471, 10, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 7, [ [ 6909, 1, 0 ] ], 1, [ [ 9089, 1, 0 ] ], 0 ], [ 8, [ [ 2343, 20, 0 ] ], 1, [ [ 2397, 25, 0 ] ], 0 ], [ 9, [ [ 5323, 1, 0 ] ], 1, [ [ 5117, 15, 0 ] ], 0 ], [ 10, [ [ 4611, 1, 1 ] ], 1, [ [ 7925, 40, 1 ], [ 8364, 1, 1 ] ], 0 ], [ 11, [ [ 6499, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 12, [ [ 347, 100, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 13, [ [ 2263, 20, 0 ] ], 1, [ [ 8362, 30, 0 ] ], 0 ], [ 14, [ [ 1740, 15, 0 ] ], 1, [ [ 7926, 20, 0 ] ], 0 ], [ 15, [ [ 4239, 1, 0 ] ], 1, [ [ 4982, 3, 0 ] ], 0 ], [ 16, [ [ 2471, 10, 0 ] ], 1, [ [ 7925, 10, 0 ] ], 0 ], [ 17, [ [ 6909, 1, 0 ] ], 1, [ [ 9089, 1, 0 ] ], 0 ], [ 18, [ [ 2343, 20, 0 ] ], 1, [ [ 2397, 25, 0 ] ], 0 ], [ 19, [ [ 5323, 1, 0 ] ], 1, [ [ 5117, 15, 0 ] ], 0 ], [ 20, [ [ 2625, 1, 1 ] ], 1, [ [ 8643, 50, 1 ], [ 7925, 40, 1 ] ], 0 ], [ 21, [ [ 6499, 1, 0 ] ], 1, [ [ 6758, 1, 0 ] ], 0 ], [ 22, [ [ 347, 100, 0 ] ], 1, [ [ 6499, 1, 0 ] ], 0 ], [ 23, [ [ 2263, 20, 0 ] ], 0, [ [ 8362, 30, 0 ] ], 0 ], [ 24, [ [ 1740, 15, 0 ] ], 0, [ [ 7926, 20, 0 ] ], 0 ], [ 25, [ [ 4239, 1, 0 ] ], 0, [ [ 4982, 3, 0 ] ], 0 ], [ 26, [ [ 2471, 10, 0 ] ], 0, [ [ 7925, 10, 0 ] ], 0 ], [ 27, [ [ 6909, 1, 0 ] ], 0, [ [ 9089, 1, 0 ] ], 0 ], [ 28, [ [ 2343, 20, 0 ] ], 0, [ [ 2397, 25, 0 ] ], 0 ], [ 29, [ [ 5323, 1, 0 ] ], 0, [ [ 5117, 15, 0 ] ], 0 ], [ 30, [ [ 8358, 10, 1 ] ], 0, [ [ 9083, 1, 1 ], [ 7925, 40, 1 ] ], 0 ] ], 0, 680, 0, 40 ] ] ] 
// RaceOrderType
//	 race_id:【1,3,11,19】
//		仙道会：1，
//		群雄逐鹿：3
//		仙界对抗赛：11
//		双龙会：19	
//		20241106 新增群英会：21
//============================================================================
Json::Value sxd_client::Mod_RaceOrder_Base_main_panel()
{
	Json::Value data;
	return this->send_and_receive(data, 715, 1);
}

//============================================================================
//  获取赛事战令信息
// {module:715, action:3,
// request:[Utils.IntUtil],
// Example	
// [id	]
//     [  ]
// 
// "response":[Utils.UByteUtil]
// Example
// 
// RaceOrderData.as L43
//		["result","gift_list","left_get_times","today_self_cont","sect_cont_limit","sect_cont"]);
//============================================================================
Json::Value sxd_client::Mod_RaceOrder_Base_get_award(int race_id)
{
	Json::Value data;
	data.append(race_id);
	return this->send_and_receive(data, 715, 3);
}